#! /bin/bash

# ===
# === Function Script
# ===
see_script_path=$PWD/see
if [[ -n $1 ]]; then
    if [[ -n $(sed -n "/# set $1/ p" $see_script_path) ]]; then
        UpperLimit=$(($(sed -n -e "/# set $1/=" $see_script_path)+1))
        LowerLimit=$(($(sed -n -e "/# $1 EOF/=" $see_script_path)-1))
        printf "\033[40;32m%-7s\033[0m \033[40;33m%-10s\033[0m\n" "Option -" "$1"
        sed -n "$UpperLimit, $LowerLimit s/#//g p" $see_script_path
    else
        printf "\033[40;32m%-8s\033[0m \033[40;31m%-10s\033[0m\n" "No Option -" "$1"
    fi
fi


# ===
# === Pure Text Instruction
# ===

#== Options

# set viewmode miller
# • Set the layout of windows
# • The mode 'miller' has three panes
# viewmode EOF


# set column_ratios 1,3,4
# • Set width of panes
# • First one : Second one : Third one = l,n,m
# column_ratios EOF


# set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$
# • Determine which files should be hidden
# • All in Regex expression
# hidden_filter EOF


# set show_hidden true
# • Determine whether show hidden files
# • You can toggle this by typing 'zh'
# show_hidden EOF


# set confirm_on_delete multiple
# • Ask for a confirmation when running the "delete" command
# • Valid values are "always", "never", "multiple" (default)
# • With "multiple", ranger will ask when you delete multiple filesat the same time.
# confirm_on_delete EOF


# set use_preview_script true
# • ranger ships with scope.sh to preview images, archives etc.
# • scope.sh is an external program script
# use_preview_script EOF


# set preview_script ~/.config/ranger/scope.sh
# • Use non-default path for file preview script
# • The path is up to user
# preview_script EOF


# set automatically_count_files true
# • Determine whether count files in the directory automatically
# automatically_count_files EOF


# set open_all_images true
# • Open all images in this directory when running certain image viewers
# • You can still open selected files by marking them.
# open_all_images EOF


# set vcs_aware true
# • Be aware of version control systems
# • Be able to display information.
# vcs_aware EOF


# set vcs_backend_git enabled
# • Determine whether show state of git
# • Modes: disabled, local(only show local info), enabled(show local and remote info)
# vcs_backend_git EOF


# set vcs_backend_hg disabled
# • Determine whether show state of hg
# • Modes: disabled, local(only show local info), enabled(show local and remote info)
# vcs_backend_hg EOF


# set vcs_backend_bzr disabled
# • Determine whether show state of bzr
# • Modes: disabled, local(only show local info), enabled(show local and remote info)
# vcs_backend_bzr EOF


# set vcs_backend_svn disabled
# • Determine whether show state of svn
# • Modes: disabled, local(only show local info), enabled(show local and remote info)
# vcs_backend_svn EOF


# set preview_images true
# • Use one of the supported image preview protocols
# preview_images EOF


# set preview_images_method w3m
# • Set the preview image method.
# • Supported methods as follow:
#
#   * w3m (default):
#     Preview images in full color with the external command "w3mimgpreview"
#     This requires the console web browser "w3m" and a supported terminal.
#
#   * iterm2:
#     Preview images in full color using iTerm2 image previews
#     This requires using iTerm2 compiled with image preview support.
#     This feature relies on the dimensions of the terminal's font.
#
#   * terminology:
#     Previews images in full color in the terminology terminal emulator.
#     Supports a wide variety of formats, even vector graphics like svg.
#
#   * urxvt:
#     Preview images in full color using urxvt image backgrounds.
#     This requires using urxvt compiled with pixbuf support.
#
#   * urxvt-full:
#     The same as urxvt but utilizing not only the preview pane but the
#     whole terminal window.
#
#   * kitty:
#     Preview images in full color using kitty image protocol.
#     Requires python PIL or pillow library.
#     Tmux is unsupported.
# preview_images_method EOF


# set w3m_delay 0.02
# • Delay in seconds before displaying an image with the w3m method.
# • Increase it in case of experiencing display corruption.
# w3m_delay EOF


# set iterm2_font_width 8
# • Default iTerm2 font width size
# • Here to set other size
# iterm2_font_width EOF


# set iterm2_font_height 11
# • Default iTerm2 font height size
# • Here to set other size
# iterm2_font_height EOF


# set unicode_ellipsis false
# • Determine whether use a unicode "..." character to mark cut-off filenames
# unicode_ellipsis EOF


# set bidi_support false
# • BIDI support - try to properly display file names in RTL languages (Hebrew, Arabic).
# • Requires the python-bidi pip package
# bidi_support EOF


# set show_hidden_bookmarks true
# • Show dotfiles in the bookmark preview box?
# show_hidden_bookmarks EOF


# set colorscheme jungle
# • Available colorschemes: default, jungle, snow, solarized
# colorscheme EOF


# set preview_files true
# • Determine whether preview files on the rightmost column
# preview_files EOF


# set preview_directories true
# • Determine whether preview directories on the rightmost column
# preview_directories EOF


# set collapse_preview true
# • Determine whether collapse (shrink) the last column if there is nothing to preview
# collapse_preview EOF


# set save_console_history true
# • Determine Whether save the console history on exit
# save_console_history EOF


# set status_bar_on_top false
# • Draw the status bar on top of the browser window
# • Default drawing location: bottom
# status_bar_on_top EOF


# set draw_progress_bar_in_status_bar true
# • Draw a progress bar in the status
# • The bar displays the average state of all currently running tasks which support progress bars
# draw_progress_bar_in_status_bar EOF


# set draw_borders none
# • Draw borders around columns (separators, outline, both, or none)
# • 'separators' are vertical lines between columns.
# • 'outline' draws a box around all the columns.
# • 'both' combines the two.
# draw_borders EOF


# set dirname_in_tabs true
# • Display the directory name in tabs
# dirname_in_tabs EOF


# set mouse_enabled false
# • Enable the mouse support
# mouse_enabled EOF


# set display_size_in_main_column true
# • Display the file size in the main column
# display_size_in_main_column EOF

# set display_size_in_status_bar true
# • Display the file size in status bar?
# display_size_in_status_bar EOF


# set display_free_space_in_status_bar true
# • Display the free disk space in the status bar
# display_free_space_in_status_bar EOF


# set display_tags_in_all_columns true
# • Display files tags in all columns or only in main column
# display_tags_in_all_columns EOF


# set update_title true
# • Set a title for the window
# update_title EOF


# set update_tmux_title false
# • Set the title to "ranger" in the tmux program
# update_tmux_title EOF


# set shorten_title 3
# • Shorten the title if it gets long
# • The number defines how many directories are displayed at the same time
# • 0 turns off this feature.


# set hostname_in_titlebar true
# • Show hostname in titlebar
# hostname_in_titlebar EOF


# set tilde_in_titlebar true
# • Abbreviate $HOME with ~ in the titlebar (first line) of ranger
# tilde_in_titlebar EOF


# set max_history_size 1000
# • How many directory-changes should be kept in history?
# max_history_size EOF


# set max_console_history_size 50
# • How many console-commands should be kept in history?
# max_console_history_size EOF


# set scroll_offset 7
# • Try to keep so much space between the top/bottom border when scrolling
# scroll_offset EOF


# set flushinput true
# • Flush the input after each key hit
# • Be noticeable when ranger lags
# flushinput EOF


# set padding_right true
# • Padding on the right when there's no preview
# • This allows you to click into the space to run the file.
# padding_right EOF


# set autosave_bookmarks true
# • Save bookmarks (used with mX and `X) instantly
# • This helps to synchronize bookmarks between multiple ranger instances but leads to *slight* performance loss.
# • When false, bookmarks are saved when ranger is exited.
# autosave_bookmarks EOF


# set save_backtick_bookmark true
# • Save the "`" bookmark to disk.
# • This can be used to switch to the last directory by typing "``".
# save_backtick_bookmark EOF


# set autoupdate_cumulative_size false
# • You can display the "real" cumulative size of directories by using the command: get_cumulative_size or typing "dc".
# • The size is expensive to calculate and will not be updated automatically.
# • You can choose to update it automatically though by turning on this option
# autoupdate_cumulative_size EOF


# set show_cursor false
# • Turning this on makes sense for screen readers
# show_cursor EOF


# set sort natural
# • One of: size, natural, basename, atime, ctime, mtime, type, random
# sort EOF


# set sort_reverse false
# • An additional sorting option
# • Reverse the default sorted order
# sort_reverse EOF


# set sort_case_insensitive true
# • An additional sorting option
# • Sort case-insensitively
# sort_case_insensitive EOF

# set sort_directories_first true
# • An additional sorting option
# • Directories first
# sort_directories_first EOF


# set sort_unicode false
# • An additional sorting option
# • Sort by unicode order
# sort_unicode EOF


# set xterm_alt_key false
# • Enable this if key combinations with the Alt Key don't work for you.
# • Especially on xterm
# xterm_alt_key EOF


# set cd_bookmarks true
# • Whether include bookmarks in cd command
# cd_bookmarks EOF


# set cd_tab_case insensitive
# • Changes case sensitivity for the cd command tab completion
# cd_tab_case EOF


# set cd_tab_fuzzy true
# • Use fuzzy tab completion with the "cd" command.
# cd_tab_fuzzy EOF


# set preview_max_size 0
# • Avoid previewing files larger than this size, in bytes.
# • Use a value of 0 to disable this feature.
# preview_max_size EOF


# set hint_collapse_threshold 10
# • The key hint lists up to this size have their sublists expanded
# • Otherwise the submaps are replaced with "...".
# hint_collapse_threshold EOF


# set show_selection_in_titlebar true
# • Add the highlighted file to the path in the titlebar
# show_selection_in_titlebar EOF


# set idle_delay 2000
# • The delay that ranger idly waits for user input, in milliseconds, with a resolution of 100ms.
# • Lower delay reduces lag between directory updates but increases CPU load.
# idle_delay EOF


# set metadata_deep_search false
# • When the metadata manager module looks for metadata:
# • false: just look for a ".metadata.json" file in the current directory
# • true: do a deep search and check all directories above the current one
# metadata_deep_search EOF


# set clear_filters_on_dir_change true
# • Clear all existing filters when leaving a directory
# clear_filters_on_dir_change EOF


# set line_numbers false
# • Disable displaying line numbers in main column.
# • Possible values: false, absolute, relative.
# line_numbers EOF


# set relative_current_zero false
# • When line_numbers=relative show the absolute line number in the current line.
# relative_current_zero EOF


# set one_indexed false
# • Start line numbers from 1 instead of 0
# one_indexed EOF


# set save_tabs_on_exit true
# • Save tabs on exit
# save_tabs_on_exit EOF


# set wrap_scroll false
# • Enable scroll wrapping - moving down while on the last item will wrap around to the top and vice versa.
# wrap_scroll EOF


# set global_inode_type_filter
# • Set the global_inode_type_filter to nothing (Default)
# • Possible options: d, f and l for directories, files and symlinks respectively.
# global_inode_type_filter EOF


# set freeze_files false
# • Allows to freeze the list of files to save I/O bandwidth.
# • It should be 'false' during start-up, but you can toggle it by pressing F.
# freeze_files EOF


#== Local Options
# Note: You can set local options that only affect a single directory.
# setlocal path=~/Downloads sort mtime


#== Aliases

# alias e     edit
# alias q     quit
# alias q!    quit!
# alias qa    quitall
# alias qa!   quitall!
# alias setl  setlocal

# alias filter     scout -prts
# alias find       scout -aets
# alias mark       scout -mr
# alias unmark     scout -Mr
# alias search     scout -rs
# alias search_inc scout -rts
# alias travel     scout -aefklst


#== Mapping

# map q quit
# map Q quitall
# map : console
# map V console shell vim%space
# map T console shell touch%space
# map r  chain draw_possible_programs; console open_with%space
# map R     reload_cwd
# map F     set freeze_files!

# map <c-r> reset
# map <c-l> redraw_window
# map <c-c> abort
# map <esc> change_mode normal
# map ` set viewmode!
# map <c-e> scroll_preview 5
# map <c-u> scroll_preview -5

# map W display_log
# map w taskview_open
# map S shell $SHELL

# map mf linemode filename
# map mi linemode fileinfo
# map mm linemode mtime
# map mh linemode humanreadablemtime
# map mp linemode permissions
# map ms linemode sizemtime
# map mH linemode sizehumanreadablemtime
# map mt linemode metatitle

# map <Space> mark_files toggle=True
# map v       mark_files all=True toggle=True
# map <c-v>   toggle_visual_mode
# map rv      toggle_visual_mode reverse=True
# map <c-c> abort
# map w taskview_open

# map H     history_go -1
# map L     history_go 1
# map ]     move_parent 1
# map [     move_parent -1
# #map }     traverse

# map gh cd ~
# map gD cd ~/Downloads
# map gff cd ~/.config
# map gfr cd ~/.config/ranger
# map gfb cd ~/.config/bash
# map gm cd ~/media
# map ge cd /etc
# map guu cd /usr
# map gub cd /usr/bin
# map gul cd /usr/local
# map gus cd /usr/share
# map guf cd /usr/share/fonts
# map gud cd /usr/share/doc
# map gv cd /var
# map gM cd /mnt

# map <UP>       move up=1
# map <DOWN>     move down=1
# map <LEFT>     move left=1
# map <RIGHT>    move right=1
# map <HOME>     move to=0
# map <END>      move to=-1
# map <PAGEDOWN> move down=1   pages=True
# map <PAGEUP>   move up=1     pages=True
# map <CR>       move right=1
# #map <DELETE>   console delete
# map <INSERT>   console touch%space

# copymap <UP>       k
# copymap <DOWN>     j
# copymap <LEFT>     h
# copymap <RIGHT>    l
# copymap <HOME>     gg
# copymap <END>      G
# map J move down=5
# map K move up=5

# map du shell -p du --max-depth=1 -h --apparent-size
# map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
# map yp yank path
# map yd yank dir
# map yn yank name
# map y. yank name_without_extension

# map df console open_with colordiff
# map M console mkcd%space
# map + chmod
# map cw eval fm.execute_console("bulkrename") if fm.thisdir.marked_items else fm.open_console("rename ")
# map a  rename_append
# map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
# map n  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

# map pp paste
# map po paste overwrite=True
# map pP paste append=True
# map pO paste overwrite=True append=True
# map pl paste_symlink relative=False
# map pL paste_symlink relative=True
# map phl paste_hardlink
# map pht paste_hardlinked_subtree

# map dD console delete
# map dd cut
# map ud uncut
# map da cut mode=add
# map dr cut mode=remove
# map dt cut mode=toggle

# map yy copy
# map uy uncut
# map ya copy mode=add
# map yr copy mode=remove
# map yt copy mode=toggle

# map C console compress%space
# map X console extracthere%space
# map cp shell pandoc %f -o %f.pdf
# map ytv console shell youtube-dl -ic%space
# map yta console shell youtube-dl -xic%space
# map mo  chmod

# map /  console search%space
# map =  search_next
# map -  search_next forward=False
# map <c-f> fzf_select
# map f console scout -ftsea%space

# map tu     tab_new
# map ti     tab_move 1
# map tn     tab_move -1
# map tq     tab_restore
# map tmi    tab_shift 1
# map tmn    tab_shift -1

# map or set sort_reverse!
# map oz set sort=random
# map os chain set sort=size;      set sort_reverse=False
# map ob chain set sort=basename;  set sort_reverse=False
# map on chain set sort=natural;   set sort_reverse=False
# map om chain set sort=mtime;     set sort_reverse=False
# map oc chain set sort=ctime;     set sort_reverse=False
# map oa chain set sort=atime;     set sort_reverse=False
# map ot chain set sort=type;      set sort_reverse=False
# map oe chain set sort=extension; set sort_reverse=False

# map oS chain set sort=size;      set sort_reverse=True
# map oB chain set sort=basename;  set sort_reverse=True
# map oN chain set sort=natural;   set sort_reverse=True
# map oM chain set sort=mtime;     set sort_reverse=True
# map oC chain set sort=ctime;     set sort_reverse=True
# map oA chain set sort=atime;     set sort_reverse=True
# map oT chain set sort=type;      set sort_reverse=True
# map oE chain set sort=extension; set sort_reverse=True

# map dc get_cumulative_size

# map zc    set collapse_preview!
# map zd    set sort_directories_first!
# map zh    set show_hidden!
# map <C-h> set show_hidden!
# copymap <C-h> <backspace>
# copymap <backspace> <backspace2>
# map zI    set flushinput!
# map zi    set preview_images!
# map zm    set mouse_enabled!
# map zp    set preview_files!
# map zP    set preview_directories!
# map zs    set sort_case_insensitive!
# map zu    set autoupdate_cumulative_size!
# map zv    set use_preview_script!
# map zf    console filter%space
# copymap zf zz

# map `<any>  enter_bookmark %any
# map '<any>  enter_bookmark %any
# map m<any>  set_bookmark %any
# map dm<any> unset_bookmark %any
# map m<bg>   draw_bookmarks
# copymap m<bg>  lm<bg> `<bg> '<bg>


#== Taskview Keybindings
# tmap <up>        taskview_move up=1
# tmap <down>      taskview_move down=1
# tmap <home>      taskview_move to=0
# tmap <end>       taskview_move to=-1
# tmap <pagedown>  taskview_move down=1.0  pages=True
# tmap <pageup>    taskview_move up=1.0    pages=True
# #tmap <C-d>       taskview_move down=0.5  pages=True
# #tmap <C-u>       taskview_move up=0.5    pages=True

# copytmap <UP>       k
# copytmap <DOWN>     j
# copytmap <HOME>     gg
# copytmap <END>      G
# copytmap <PAGEDOWN> <C-E>
# copytmap <PAGEUP>   <C-U>

# tmap <C-E>      eval -q fm.ui.taskview.task_move(-1)
# tmap <C-U>      eval -q fm.ui.taskview.task_move(0)
# tmap dd         eval -q fm.ui.taskview.task_remove()
# #tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
# #tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
# tmap <delete>   eval -q fm.ui.taskview.task_remove()

# tmap <C-l> redraw_window
# tmap <ESC> taskview_close
# copytmap <ESC> q Q w <C-c>

#== Define keys for the console
# cmap <tab>   eval fm.ui.console.tab()
# cmap <s-tab> eval fm.ui.console.tab(-1)
# cmap <ESC>   eval fm.ui.console.close()
# cmap <CR>    eval fm.ui.console.execute()
# cmap <C-l>   redraw_window

# copycmap <ESC> <C-c>
# copycmap <CR>  <C-j>

# cmap <up>    eval fm.ui.console.history_move(-1)
# cmap <down>  eval fm.ui.console.history_move(1)
# cmap <left>  eval fm.ui.console.move(left=1)
# cmap <right> eval fm.ui.console.move(right=1)
# cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
# cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
# cmap <a-b> eval fm.ui.console.move_word(left=1)
# cmap <a-f> eval fm.ui.console.move_word(right=1)

# copycmap <a-b> <a-left>
# copycmap <a-f> <a-right>

# cmap <backspace>  eval fm.ui.console.delete(-1)
# cmap <delete>     eval fm.ui.console.delete(0)
# cmap <C-w>        eval fm.ui.console.delete_word()
# cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
# cmap <C-k>        eval fm.ui.console.delete_rest(1)
# cmap <C-u>        eval fm.ui.console.delete_rest(-1)
# cmap <C-y>        eval fm.ui.console.paste()

# copycmap <ESC>       <C-g>
# copycmap <up>        <C-p>
# copycmap <down>      <C-n>
# copycmap <left>      <C-b>
# copycmap <right>     <C-f>
# copycmap <home>      <C-a>
# copycmap <end>       <C-e>
# copycmap <delete>    <C-d>
# copycmap <backspace> <C-h>
# copycmap <backspace> <backspace2>
# cmap <allow_quantifiers> false  # (typing in numerals)

#== Devicons
# default_linemode devicons
